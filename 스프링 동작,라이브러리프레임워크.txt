스프링 동작방식
mvc2구조로 동작합니다

클라이언트요청-> 디스패쳐서블릿이 받고  ->핸들러매핑에게 알맞은컨트롤러탐색요청
-> 핸들러매핑이 컨트롤러 빈객체를 디스패쳐 서블릿에 리턴 -> 
디스페쳐서블릿이 리턴받은 빈객체를 핸들러어댑터에게 요청처리를 위임 
-> 어댑터는 컨트롤러의 알맞은메소드호출하고 컨트롤러가 어댑터에게 반환
-> 핸들러어댑터가 반환받은 결과를 모델앤뷰 객체로 변환해서 디스패쳐서블릿에 리턴
-> 디스패쳐 서블릿은 결과를 보여줄 뷰를 뷰 리졸버 빈객체를 사용해서
모델앤 뷰를 탐색
-> 뷰 리졸버는 해당 뷰객체를 찾거나 생성하여 디스패처 서블릿에 리턴
-> 디스패쳐 서블릿은 뷰리졸버가 리턴한 뷰객체에 응답에대한 결과생성을 오쳥
-> 결과를 생성한 뷰는 결과를 클라이언트에게 전달

디스페처서블릿이란 서블릿컨테이너의 가장앞에서 http 프로토콜이 들어오는 모든요청을
먼저받아서 적합한 컨트롤러에 위임해주는 프론트컨트롤러. 컨트롤러를 찾아 위임, 처리된결과를 받는역할

뷰 리졸버
사용자가 요청한 화면을 보여주는 역할 , view이름으로 view객채를 맵핑하는 역할
컴트롤러 return 부분에 문자열 경로를 적어주어 해당 경로를 랜더링해서
view를 반환, 하면 뷰 리졸버가 해결 




라이브러리 
재사용가능한 코드모음 ,특정기능, 작업을 수행하는 함수, 클래스, 모듈 포함, 개발자가 직접 호출하여 사용가능, 개발자는 선택적으로 라이브러리를 사용할 수 있다.

프레임워크 
소프트웨어 개발을 위한 기본구조, 규칙을 제공하는 추상적인 틀,
개발자는 프레임워크의 규칙, 컨벤션을 따르며 제공하는 기능을 사용하여 어플리케이션을 개발한다.

둘의 차이 : 
라이브러리의 흐름은 개발자에게 있어서 필요한 기능을 원할때 호출하여 사용하고, 
 개발자는 프레임워크가 제공하는 구조 안에서 코드를 작성하여프레임워크가 애플리케이션의 흐름을 관리